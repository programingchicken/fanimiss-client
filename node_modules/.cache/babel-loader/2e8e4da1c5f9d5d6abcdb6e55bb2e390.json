{"ast":null,"code":"/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\nimport { thematicBreak } from './handlers/thematic-break.js';\nimport { list } from './handlers/list.js';\nimport { wrap } from './wrap.js';\n/**\n * @param {H} h\n */\n\nexport function footer(h) {\n  const footnoteById = h.footnoteById;\n  const footnoteOrder = h.footnoteOrder;\n  let index = -1;\n  /** @type {Array.<ListItem>} */\n\n  const listItems = [];\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()];\n\n    if (!def) {\n      continue;\n    }\n\n    const marker = String(index + 1);\n    const content = [...def.children];\n    /** @type {Link} */\n\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {\n        hProperties: {\n          className: ['footnote-back'],\n          role: 'doc-backlink'\n        }\n      },\n      children: [{\n        type: 'text',\n        value: '↩'\n      }]\n    };\n    const tail = content[content.length - 1];\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference);\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference);\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {\n        hProperties: {\n          id: 'fn' + marker,\n          role: 'doc-endnote'\n        }\n      },\n      children: content,\n      position: def.position\n    });\n  }\n\n  if (listItems.length === 0) {\n    return null;\n  }\n\n  return h(null, 'section', {\n    className: ['footnotes'],\n    role: 'doc-endnotes'\n  }, wrap([thematicBreak(h), list(h, {\n    type: 'list',\n    ordered: true,\n    children: listItems\n  })], true));\n}","map":{"version":3,"names":["thematicBreak","list","wrap","footer","h","footnoteById","footnoteOrder","index","listItems","length","def","toUpperCase","marker","String","content","children","backReference","type","url","data","hProperties","className","role","value","tail","push","id","position","ordered"],"sources":["/Users/gabrielpowers/Desktop/animeDropShip/client/node_modules/mdast-util-to-hast/lib/footer.js"],"sourcesContent":["/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport {thematicBreak} from './handlers/thematic-break.js'\nimport {list} from './handlers/list.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let index = -1\n  /** @type {Array.<ListItem>} */\n  const listItems = []\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const marker = String(index + 1)\n    const content = [...def.children]\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {hProperties: {className: ['footnote-back'], role: 'doc-backlink'}},\n      children: [{type: 'text', value: '↩'}]\n    }\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference)\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference)\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn' + marker, role: 'doc-endnote'}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'section',\n    {className: ['footnotes'], role: 'doc-endnotes'},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,aAAR,QAA4B,8BAA5B;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AAEA;AACA;AACA;;AACA,OAAO,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;EACxB,MAAMC,YAAY,GAAGD,CAAC,CAACC,YAAvB;EACA,MAAMC,aAAa,GAAGF,CAAC,CAACE,aAAxB;EACA,IAAIC,KAAK,GAAG,CAAC,CAAb;EACA;;EACA,MAAMC,SAAS,GAAG,EAAlB;;EAEA,OAAO,EAAED,KAAF,GAAUD,aAAa,CAACG,MAA/B,EAAuC;IACrC,MAAMC,GAAG,GAAGL,YAAY,CAACC,aAAa,CAACC,KAAD,CAAb,CAAqBI,WAArB,EAAD,CAAxB;;IAEA,IAAI,CAACD,GAAL,EAAU;MACR;IACD;;IAED,MAAME,MAAM,GAAGC,MAAM,CAACN,KAAK,GAAG,CAAT,CAArB;IACA,MAAMO,OAAO,GAAG,CAAC,GAAGJ,GAAG,CAACK,QAAR,CAAhB;IACA;;IACA,MAAMC,aAAa,GAAG;MACpBC,IAAI,EAAE,MADc;MAEpBC,GAAG,EAAE,WAAWN,MAFI;MAGpBO,IAAI,EAAE;QAACC,WAAW,EAAE;UAACC,SAAS,EAAE,CAAC,eAAD,CAAZ;UAA+BC,IAAI,EAAE;QAArC;MAAd,CAHc;MAIpBP,QAAQ,EAAE,CAAC;QAACE,IAAI,EAAE,MAAP;QAAeM,KAAK,EAAE;MAAtB,CAAD;IAJU,CAAtB;IAMA,MAAMC,IAAI,GAAGV,OAAO,CAACA,OAAO,CAACL,MAAR,GAAiB,CAAlB,CAApB;;IAEA,IAAIe,IAAI,IAAIA,IAAI,CAACP,IAAL,KAAc,WAA1B,EAAuC;MACrCO,IAAI,CAACT,QAAL,CAAcU,IAAd,CAAmBT,aAAnB;IACD,CAFD,MAEO;MACL;MACA;MACA;MACAF,OAAO,CAACW,IAAR,CAAaT,aAAb;IACD;;IAEDR,SAAS,CAACiB,IAAV,CAAe;MACbR,IAAI,EAAE,UADO;MAEbE,IAAI,EAAE;QAACC,WAAW,EAAE;UAACM,EAAE,EAAE,OAAOd,MAAZ;UAAoBU,IAAI,EAAE;QAA1B;MAAd,CAFO;MAGbP,QAAQ,EAAED,OAHG;MAIba,QAAQ,EAAEjB,GAAG,CAACiB;IAJD,CAAf;EAMD;;EAED,IAAInB,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;IAC1B,OAAO,IAAP;EACD;;EAED,OAAOL,CAAC,CACN,IADM,EAEN,SAFM,EAGN;IAACiB,SAAS,EAAE,CAAC,WAAD,CAAZ;IAA2BC,IAAI,EAAE;EAAjC,CAHM,EAINpB,IAAI,CACF,CACEF,aAAa,CAACI,CAAD,CADf,EAEEH,IAAI,CAACG,CAAD,EAAI;IAACa,IAAI,EAAE,MAAP;IAAeW,OAAO,EAAE,IAAxB;IAA8Bb,QAAQ,EAAEP;EAAxC,CAAJ,CAFN,CADE,EAKF,IALE,CAJE,CAAR;AAYD"},"metadata":{},"sourceType":"module"}